<?php
// TODO allow configurable image
/*
 * support those tags:
 *
 * <language>en-en</language>
 * <generator>{bigace_version full=true}</generator>
 * <docs>http://blogs.law.harvard.edu/tech/rss</docs>
 * <copyright>Copyright holder</copyright>
 * <managingEditor>email@yourdomain.com (Your Name)</managingEditor>
 * <webMaster>email@yourdomain.com (Your Name)</webMaster>
 *
 */

// load translations
$this->t()->load('news');

/* @var $newsEntry Bigace_News_Item */
$home = LinkHelper::url('/');
$feed = new Zend_Feed_Writer_Feed();
$feed->setTitle($this->sitename());
$feed->setGenerator('Bigace', $this->version(true), Bigace_Core::WEBSITE);
$feed->setDescription(sprintf($this->t('news_feed_title'), $this->sitename()));
$feed->setLink($home);
$feed->setFeedLink($this->FEED_URL, $this->FEED_TYPE);
$feed->addAuthor(
    array(
        'name'  => Bigace_Config::get('community', 'copyright.holder'),
        'email' => Bigace_Config::get('community', 'contact.email'),
        'uri'   => $home,
    )
);
$feed->setDateModified(time());

foreach ($this->NEWS as $newsEntry) {
	$newsUrl = LinkHelper::itemurl($newsEntry);

	$title   = $newsEntry->getTitle();
	$teaser  = $newsEntry->getTeaser();
	$content = $teaser;
	$entry   = $feed->createEntry();

	$entry->setTitle($title);
	$entry->setLink($newsUrl);
	$entry->setDateModified($newsEntry->getLastDate());
	$entry->setDateCreated($newsEntry->getCreateDate());
	$entry->setDescription($teaser);

	if ($this->FEED_FULL) {
        $type    = Bigace_Item_Type_Registry::get(_BIGACE_ITEM_MENU);
        $cs      = $type->getContentService();
        $cnt     = $cs->get($news, $cs->query());
        $content = $cnt->getContent();
	} else {
	   $content = htmlspecialchars($teaser).'<br/><a href="'.$newsUrl.'">'.$this->t('news_feed_link').'</a>';
	}

    $entry->setContent($content);

	if ($newsEntry->getImageID() !== null) {
        $image = Bigace_Item_Basic::get(_BIGACE_ITEM_IMAGE, $newsEntry->getImageID());

        // prevent failure if image was deleted or not found
        if ($image !== null) {
            $type = Bigace_Item_Type_Registry::get(_BIGACE_ITEM_IMAGE);
            $cs   = $type->getContentService();
            $cnt  = $cs->get($image, $cs->query());

            if ($image !== null) {
                $entry->setEnclosure(
                    array(
                       'uri'    => LinkHelper::itemUrl($image),
                       'length' => $cnt->getSize(),
                       'type'   => $image->getMimetype()
                    )
                );
            }
        }
	}
	$feed->addEntry($entry);
}

if ($this->FEED_TYPE === null) {
    echo $feed->export(Zend_Feed_Writer::TYPE_ATOM_ANY);
} else {
    echo $feed->export($this->FEED_TYPE);
}
